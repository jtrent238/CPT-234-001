{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Consolas;}}
{\colortbl\red251\green0\blue0;\red102\green116\blue123;\red160\green130\blue189;\red103\green140\blue177;\red0\green0\blue0;\red224\green226\blue228;\red232\green226\blue183;\red255\green205\blue34;\red236\green118\blue0;}
{\info{\comment Generated by the SynEdit RTF exporter}
{\title Day of the Week.rtf}}

\deflang1033\pard\plain\f0\fs20 \cf0 ï»¿
\par \cf1\i //---------------------------------------------------------------------------------------
\par // Programmer:		Jonathan Trent Patterson
\par // Date:			2/3/2019
\par // Program Name:	Day of the Week
\par // Chapter:			Chapter 3 - Decisions  
\par // Description:		This program gets input from user and outputs day of the week.
\par //					It takes into consideration of leap years.
\par 
\par \i0\cf2 #define _CRT_SECURE_NO_WARNINGS \cf1\i // Disable warnings (and errors) when using non-secure versions of printf, scanf, strcpy, etc.
\par \i0\cf2 #include <stdio.h> \cf1\i // Needed for working with printf and scanf
\par \i0\cf2 #include <stdbool.h> \cf1\i // Needed for working with bool
\par \i0\cf2 #include <string.h> \cf1\i // Needed for working with strings
\par 
\par \i0\cf3 int\cf4  \cf5 main\cf6 (\cf3 void\cf6 )
\par \{
\par \cf4 	\cf1\i // Constant and Variable Declarations
\par 
\par \i0\cf4 	\cf3 bool\cf4  \cf5 isLeapYear\cf6 ;
\par \cf4 	\cf3 int\cf4  \cf5 numDaysMonth\cf4  \cf6 =\cf4  \cf7 31\cf6 ;
\par \cf4 	\cf3 char\cf4  \cf5 dayOfWeek\cf6 [\cf7 10\cf6 ]\cf4  \cf6 =\cf4  \cf8 ""\cf6 ;
\par \cf4 	
\par 	\cf3 int\cf4  \cf5 userYear\cf4  \cf6 =\cf4  \cf7 0\cf6 ;
\par \cf4 	\cf3 int\cf4  \cf5 userMonth\cf4  \cf6 =\cf4  \cf7 0\cf6 ;
\par \cf4 	\cf3 int\cf4  \cf5 userDay\cf4  \cf6 =\cf4  \cf7 0\cf6 ;
\par \cf4 	\cf3 int\cf4  \cf5 daysFebuary\cf4  \cf6 =\cf4  \cf7 28\cf6 ;
\par \cf4 	\cf3 int\cf4  \cf5 myDayofWeek\cf4  \cf6 =\cf4  \cf7 0\cf6 ;
\par 
\par \cf4 	\cf1\i //formulaDayOfWeek = D + 2 * M + (int)(.6 * (M + 1)) + Y + (Y / 4) - (Y / 100) + (Y / 400) + 2 ;
\par 
\par \i0\cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 INVALID_YEAR\cf4  \cf6 =\cf4  \cf7 1582\cf6 ;
\par \cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MIN_MONTHS\cf4  \cf6 =\cf4  \cf7 1\cf6 ;
\par \cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MAX_MONTHS\cf4  \cf6 =\cf4  \cf7 12\cf6 ;
\par \cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MIN_DAYS\cf4  \cf6 =\cf4  \cf7 1\cf6 ;
\par \cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MAX_DAYS\cf4  \cf6 =\cf4  \cf7 31\cf6 ;
\par 
\par \cf4 	\cf1\i //Month constants
\par \i0\cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MONTH_JANUARY\cf4  \cf6 =\cf4  \cf7 1\cf6 ;
\par \cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MONTH_FEBUARY\cf4  \cf6 =\cf4  \cf7 2\cf6 ;
\par \cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MONTH_MARCH\cf4  \cf6 =\cf4  \cf7 3\cf6 ;
\par \cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MONTH_APRIL\cf4  \cf6 =\cf4  \cf7 4\cf6 ;
\par \cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MONTH_MAY\cf4  \cf6 =\cf4  \cf7 5\cf6 ;
\par \cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MONTH_JUNE\cf4  \cf6 =\cf4  \cf7 6\cf6 ;
\par \cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MONTH_JULY\cf4  \cf6 =\cf4  \cf7 7\cf6 ;
\par \cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MONTH_AUGEST\cf4  \cf6 =\cf4  \cf7 8\cf6 ;
\par \cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MONTH_SEPTEMBER\cf4  \cf6 =\cf4  \cf7 9\cf6 ;
\par \cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MONTH_OCTOBER\cf4  \cf6 =\cf4  \cf7 10\cf6 ;
\par \cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MONTH_NOVEMBER\cf4  \cf6 =\cf4  \cf7 11\cf6 ;
\par \cf4 	\cf3 const\cf4  \cf3 int\cf4  \cf5 MONTH_DECEMBER\cf4  \cf6 =\cf4  \cf7 12\cf6 ;
\par 
\par \cf4 	\cf3 int\cf4  \cf5 weekday\cf4  \cf6 =\cf4  \cf6 (\cf5 userDay\cf4  \cf6 +=\cf4  \cf5 userMonth\cf4  \cf6 <\cf4  \cf7 3\cf4  \cf6 ?\cf4  \cf5 userYear\cf6 --\cf4  \cf6 :\cf4  \cf5 userYear\cf4  \cf6 -\cf4  \cf7 2\cf6 ,\cf4  \cf7 23\cf4  \cf6 *\cf4  \cf5 userMonth\cf4  \cf6 /\cf4  \cf7 9\cf4  \cf6 +\cf4  \cf5 userDay\cf4  \cf6 +\cf4  \cf7 4\cf4  \cf6 +\cf4  \cf5 userYear\cf4  \cf6 /\cf4  \cf7 4\cf4  \cf6 -\cf4  \cf5 userYear\cf4  \cf6 /\cf4  \cf7 100\cf4  \cf6 +\cf4  \cf5 userYear\cf4  \cf6 /\cf4  \cf7 400\cf6 )\cf4  \cf6 %\cf4  \cf7 7\cf6 ;
\par \cf4 	\cf1\i // *** Your program goes here ***
\par 
\par 
\par \i0\cf4 	\cf3 enum\cf4  \cf5 daysMonth\cf4  \cf6 \{
\par \cf4 		\cf5 DAYS_JANUARY\cf4  \cf6 =\cf4  \cf7 31\cf6 ,
\par \cf4 		\cf5 DAYS_FEBUARY\cf4  \cf6 =\cf4  \cf7 28\cf6 ,
\par \cf4 		\cf5 DAYS_FEBUARY_LEAP\cf4  \cf6 =\cf4  \cf7 29\cf6 ,
\par \cf4 		\cf5 DAYS_MARCH\cf4  \cf6 =\cf4  \cf7 31\cf6 ,
\par \cf4 		\cf5 DAYS_APRIL\cf4  \cf6 =\cf4  \cf7 30\cf6 ,
\par \cf4 		\cf5 DAYS_MAY\cf4  \cf6 =\cf4  \cf7 31\cf6 ,
\par \cf4 		\cf5 DAYS_JUNE\cf4  \cf6 =\cf4  \cf7 30\cf6 ,
\par \cf4 		\cf5 DAYS_JULY\cf4  \cf6 =\cf4  \cf7 31\cf6 ,
\par \cf4 		\cf5 DAYS_AUGEST\cf4  \cf6 =\cf4  \cf7 31\cf6 ,
\par \cf4 		\cf5 DAYS_SEPTEMBER\cf4  \cf6 =\cf4  \cf7 30\cf6 ,
\par \cf4 		\cf5 DAYS_OCTOBER\cf4  \cf6 =\cf4  \cf7 31\cf6 ,
\par \cf4 		\cf5 DAYS_NOVEMBER\cf4  \cf6 =\cf4  \cf7 30\cf6 ,
\par \cf4 		\cf5 DAYS_DECEMBER\cf4  \cf6 =\cf4  \cf7 31
\par \cf4 	\cf6 \};
\par \cf4 	
\par 	\cf3 enum\cf4  \cf5 daysWeek\cf4  \cf6 \{
\par \cf4 		\cf5 DAY_SUNDAY\cf4  \cf6 =\cf4  \cf7 0\cf6 ,
\par \cf4 		\cf5 DAY_MONDAY\cf4  \cf6 =\cf4  \cf7 1\cf6 ,
\par \cf4 		\cf5 DAY_TUESDAY\cf4  \cf6 =\cf4  \cf7 2\cf6 ,
\par \cf4 		\cf5 DAY_WEDNESDAY\cf4  \cf6 =\cf4  \cf7 3\cf6 ,
\par \cf4 		\cf5 DAY_THURSDAY\cf4  \cf6 =\cf4  \cf7 4\cf6 ,
\par \cf4 		\cf5 DAY_FRIDAY\cf4  \cf6 =\cf4  \cf7 5\cf6 ,
\par \cf4 		\cf5 DAY_SATURDAY\cf4  \cf6 =\cf4  \cf7 6
\par \cf4 	\cf6 \};
\par 
\par \cf4 	\cf5 printf\cf6 (\cf8 "Enter a year (after 1582): "\cf6 );
\par \cf4 	\cf5 scanf\cf6 (\cf8 "%d"\cf6 ,\cf4  \cf6 &\cf5 userYear\cf6 );
\par 
\par \cf4 	 \cf3 if\cf4  \cf6 (\cf5 userYear\cf4  \cf6 <\cf4  \cf7 1582\cf6 )\cf4  \cf6 \{
\par \cf4 		 \cf5 printf\cf6 (\cf8 "The year entered was not after %d."\cf6 ,\cf4  \cf5 INVALID_YEAR\cf6 );
\par \cf4 	 \cf6 \}\cf4  
\par 	 \cf3 else\cf4  \cf6 \{
\par \cf4 		 \cf5 printf\cf6 (\cf8 "Enter a month (%d-%d): "\cf6 ,\cf4  \cf5 MIN_MONTHS\cf6 ,\cf4  \cf5 MAX_MONTHS\cf6 );
\par \cf4 		 \cf5 scanf\cf6 (\cf8 "%d"\cf6 ,\cf4  \cf6 &\cf5 userMonth\cf6 );
\par \cf4 			\cf3 if\cf4  \cf6 (\cf5 userMonth\cf4  \cf6 <\cf4  \cf5 MIN_MONTHS\cf4  \cf6 ||\cf4  \cf5 userMonth\cf4  \cf6 >\cf4  \cf5 MAX_MONTHS\cf6 )\cf4  \cf6 \{
\par \cf4 				\cf5 printf\cf6 (\cf8 "The month entered was not between %d and %d inclusive."\cf6 ,\cf4  \cf5 MIN_MONTHS\cf6 ,\cf4  \cf5 MAX_MONTHS\cf6 );
\par \cf4 			\cf6 \}\cf4  
\par 			\cf3 else\cf4  \cf6 \{
\par \cf4 				\cf5 printf\cf6 (\cf8 "Enter a day (%d-%d): "\cf6 ,\cf4  \cf5 MIN_DAYS\cf6 ,\cf4  \cf5 MAX_DAYS\cf6 );
\par \cf4 				\cf5 scanf\cf6 (\cf8 "%d"\cf6 ,\cf4  \cf6 &\cf5 userDay\cf6 );
\par \cf4 				\cf3 if\cf4  \cf6 (\cf5 userDay\cf4  \cf6 <\cf4  \cf5 MIN_DAYS\cf4  \cf6 ||\cf4  \cf5 userDay\cf4  \cf6 >\cf4  \cf5 MAX_DAYS\cf6 )\cf4  \cf6 \{
\par \cf4 					\cf5 printf\cf6 (\cf8 "The day entered was not between %d and %d inclusive."\cf6 ,\cf4  \cf5 MIN_DAYS\cf6 ,\cf4  \cf5 MAX_DAYS\cf6 );
\par \cf4 				\cf6 \}
\par \cf4 				\cf3 else\cf4  \cf6 \{
\par \cf4 					\cf1\i //Determine if it is a leap year
\par 
\par \i0\cf4 					\cf3 if\cf4  \cf6 (\cf5 userYear\cf4  \cf6 %\cf4  \cf7 400\cf4  \cf6 ==\cf4  \cf7 0\cf6 )\cf4  \cf6 \{
\par \cf4 						\cf5 isLeapYear\cf4  \cf6 =\cf4  \cf3 true\cf6 ;
\par \cf4 					\cf6 \}
\par \cf4 					\cf3 else\cf4  \cf3 if\cf4  \cf6 (\cf5 userYear\cf4  \cf6 %\cf4  \cf7 100\cf4  \cf6 ==\cf4  \cf7 0\cf6 )\cf4  \cf6 \{
\par \cf4 						\cf5 isLeapYear\cf4  \cf6 =\cf4  \cf3 false\cf6 ;
\par \cf4 					\cf6 \}
\par \cf4 					\cf3 else\cf4  \cf3 if\cf4  \cf6 (\cf5 userYear\cf4  \cf6 %\cf4  \cf7 4\cf4  \cf6 ==\cf4  \cf7 0\cf6 )\cf4  \cf6 \{
\par \cf4 						\cf5 isLeapYear\cf4  \cf6 =\cf4  \cf3 true\cf6 ;
\par \cf4 					\cf6 \}
\par \cf4 					\cf3 else\cf4  \cf6 \{\}
\par 
\par \cf4 					\cf3 if\cf4  \cf6 (\cf5 isLeapYear\cf4  \cf6 ==\cf4  \cf3 true\cf6 )\cf4  \cf6 \{
\par \cf4 						\cf5 daysFebuary\cf4  \cf6 =\cf4  \cf5 daysFebuary\cf4  \cf6 +\cf4  \cf7 1\cf6 ;\cf4  \cf1\i //if it is a leap year add 1 day to febuary
\par \i0\cf4 					\cf6 \}
\par \cf4 					\cf3 else\cf4  \cf6 \{
\par \cf4 						\cf1\i //conunie here
\par \i0\cf4 					\cf6 \}
\par \cf4 				\cf6 \}
\par \cf4 			\cf6 \}
\par \cf4 	 \cf6 \}
\par 
\par \cf4 	 
\par 	 \cf5 myDayofWeek\cf4  \cf6 =\cf4  \cf5 userDay\cf4  \cf6 +\cf4  \cf7 2\cf4  \cf6 *\cf4  \cf5 userMonth\cf4  \cf6 +\cf4  \cf6 (\cf3 int\cf6 )(\cf7 .6\cf4  \cf6 *(\cf5 userMonth\cf4  \cf6 +\cf4  \cf7 1\cf6 ))\cf4  \cf6 +\cf4  \cf5 userYear\cf4  \cf6 +\cf4  \cf6 (\cf5 userYear\cf4  \cf6 /\cf4  \cf7 4\cf6 )\cf4  \cf6 -\cf4  \cf6 (\cf5 userYear\cf4  \cf6 /\cf4  \cf7 100\cf6 )\cf4  \cf6 +\cf4  \cf6 (\cf5 userYear\cf4  \cf6 /\cf4  \cf7 400\cf6 )\cf4  \cf6 +\cf4  \cf7 2\cf6 ;
\par \cf4 	 \cf1\i //myDayofWeek = myDayofWeek - 2490;
\par \i0\cf4 	 
\par 	 \cf5 weekday\cf4  \cf6 =\cf4  \cf6 (\cf3 int\cf6 )\cf5 weekday\cf6 ;
\par \cf4 	 \cf5 myDayofWeek\cf4  \cf6 =\cf4  \cf6 (\cf5 myDayofWeek\cf4  \cf6 %\cf4  \cf7 7\cf6 );
\par \cf4 	 \cf1\i //printf("The day of the week is %d.", myDayofWeek);
\par \i0\cf4 	 \cf1\i //printf("\\n");
\par \i0\cf4 	 \cf1\i //printf("The day of the week is %d.", weekday);
\par 
\par \i0\cf4 	 \cf5 printf\cf6 (\cf8 ""\cf6 );
\par \cf4 	 
\par 	 \cf1\i //Determine if it is a leap year
\par 
\par \i0\cf4 	 \cf3 if\cf4  \cf6 ((\cf5 userYear\cf4  \cf6 %\cf4  \cf7 400\cf6 )\cf4  \cf6 ==\cf4  \cf7 0\cf6 )\cf4  \cf6 \{
\par \cf4 		 \cf5 isLeapYear\cf4  \cf6 =\cf4  \cf3 true\cf6 ;
\par \cf4 	 \cf6 \}
\par \cf4 	 \cf3 if\cf4  \cf6 ((\cf5 userYear\cf4  \cf6 %\cf4  \cf7 100\cf6 )\cf4  \cf6 ==\cf4  \cf7 0\cf6 )\cf4  \cf6 \{
\par \cf4 		 \cf5 isLeapYear\cf4  \cf6 =\cf4  \cf3 false\cf6 ;
\par \cf4 	 \cf6 \}
\par \cf4 	 \cf3 if\cf4  \cf6 ((\cf5 userYear\cf4  \cf6 %\cf4  \cf7 4\cf6 )\cf4  \cf6 ==\cf4  \cf7 0\cf6 )\cf4  \cf6 \{
\par \cf4 		 \cf5 isLeapYear\cf4  \cf6 =\cf4  \cf3 true\cf6 ;
\par \cf4 	 \cf6 \}
\par \cf4 	 
\par 
\par 	 \cf3 if\cf4  \cf6 (\cf5 isLeapYear\cf4  \cf6 ==\cf4  \cf3 true\cf6 )\cf4  \cf6 \{
\par \cf4 		 \cf5 myDayofWeek\cf4  \cf6 =\cf4  \cf5 myDayofWeek\cf4  \cf6 +\cf4  \cf7 1\cf6 ;\cf4  \cf1\i // If its a leap year add only 1 day
\par \i0\cf4 	 \cf6 \}
\par \cf4 	 \cf3 else\cf4  \cf6 \{
\par \cf4 		 \cf5 myDayofWeek\cf4  \cf6 =\cf4  \cf5 myDayofWeek\cf4  \cf6 +\cf4  \cf7 2\cf6 ;\cf4  \cf1\i // If its not a leap year add 2 days (not sure why this)
\par \i0\cf4 	 \cf6 \}
\par 
\par \cf4 	 \cf5 printf\cf6 (\cf8 "\\n"\cf6 );\cf4  \cf1\i //blank line
\par 
\par \i0\cf4 	 \cf3 switch\cf4  \cf6 (\cf5 myDayofWeek\cf6 )
\par \cf4 	 \cf6 \{
\par \cf4 	 \cf3 case\cf4  \cf7 0\cf6 :
\par \cf4 		 \cf5 printf\cf6 (\cf8 "The day of the week was %s."\cf6 ,\cf4  \cf8 "Sunday"\cf4  \cf1\i /*DAY_SUNDAY*/\i0\cf6 );
\par \cf4 		 \cf3 break\cf6 ;
\par \cf4 	 \cf3 case\cf4  \cf7 1\cf6 :
\par \cf4 		 \cf5 printf\cf6 (\cf8 "The day of the week was %s."\cf6 ,\cf4  \cf8 "Monday"\cf4  \cf1\i /*DAY_MONDAY*/\i0\cf6 );
\par \cf4 		 \cf3 break\cf6 ;
\par \cf4 	 \cf3 case\cf4  \cf7 2\cf6 :
\par \cf4 		 \cf5 printf\cf6 (\cf8 "The day of the week was %s."\cf6 ,\cf4  \cf8 "Tuesday"\cf4  \cf1\i /*DAY_TUESDAY*/\i0\cf6 );
\par \cf4 		 \cf3 break\cf6 ;
\par \cf4 	 \cf3 case\cf4  \cf7 3\cf6 :
\par \cf4 		 \cf5 printf\cf6 (\cf8 "The day of the week was %s."\cf6 ,\cf4  \cf8 "Wednesday"\cf4  \cf1\i /*DAY_WEDNESDAY*/\i0\cf6 );
\par \cf4 		 \cf3 break\cf6 ;
\par \cf4 	 \cf3 case\cf4  \cf7 4\cf6 :
\par \cf4 		 \cf5 printf\cf6 (\cf8 "The day of the week was %s."\cf6 ,\cf4  \cf8 "Thursday"\cf4  \cf1\i /*DAY_THURSDAY*/\i0\cf6 );
\par \cf4 		 \cf3 break\cf6 ;
\par \cf4 	 \cf3 case\cf4  \cf7 5\cf6 :
\par \cf4 		 \cf5 printf\cf6 (\cf8 "The day of the week was %s."\cf6 ,\cf4  \cf8 "Friday"\cf4  \cf1\i /*DAY_FRIDAY*/\i0\cf6 );
\par \cf4 		 \cf3 break\cf6 ;
\par \cf4 	 \cf3 case\cf4  \cf7 6\cf6 :
\par \cf4 		 \cf5 printf\cf6 (\cf8 "The day of the week was %s."\cf6 ,\cf4  \cf8 "Saturday"\cf4  \cf1\i /*DAY_SATURDAY*/\i0\cf6 );
\par \cf4 		 \cf3 break\cf6 ;
\par 
\par \cf4 	 \cf3 default\cf6 :
\par \cf4 		 \cf5 printf\cf6 (\cf8 "Invalid : Something is wrong here!"\cf6 );
\par \cf4 		 \cf3 break\cf6 ;
\par \cf4 	 \cf6 \}
\par \cf1\i /*
\par 	printf("%d", userDay + 2 * userMonth + (int)(.6 *(userMonth + 1)) + userYear + (userYear / 4) - (userYear / 100) + (userYear / 400) + 2);
\par 
\par 	*/
\par 
\par \i0\cf4 	\cf5 printf\cf6 (\cf8 "\\n"\cf6 );\cf4  \cf1\i //blank line 
\par 
\par \i0\cf4 	\cf3 return\cf4  \cf7 0\cf6 ;
\par \}\cf4  \cf1\i // end main()
\par }